library IEEE;
use IEEE.std_logic_1164.all;

entity wallace_multiplier is
  port (
    a : in std_logic_vector($operands_size_bits - 1 downto 0);
    b : in std_logic_vector($operands_size_bits - 1 downto 0);
    c : out std_logic_vector($output_size_bits - 1 downto 0)
  );
end wallace_multiplier;

architecture Behavioral of wallace_multiplier is

    component full_adder is
     Port ( A : in STD_LOGIC;
             B : in STD_LOGIC;
             Cin : in STD_LOGIC;
             S : out STD_LOGIC;
             Cout : out STD_LOGIC);
    end component;

    component half_adder is
     Port ( A : in STD_LOGIC;
             B : in STD_LOGIC;
             S : out STD_LOGIC;
             Cout : out STD_LOGIC);
    end component;

    type partial_products_type is array (0 to $operands_size_bits - 1) of std_logic_vector($operands_size_bits - 1 downto 0);
    signal partial_products : partial_products_type;

    $signal_definitions

begin

    $component_instances

end Behavioral;
